openapi: "3.0.2"
info:
  title: ics APIs
  version: "1.0"
  description: This is api sample for ics.
  contact:
    email: lixchengyu@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080/ics
    description: Development server
  - url: https://localhost:8080/ics
    description: Production server
tags:
  - name: ticket
    description: Everything about ticket API
  - name: group
    description: Everything about group API
  - name: rescan
    description: Everything about rescan API

paths:
  /ticket/column-name.json:
    post:
      tags:
        - ticket
      summary: get all ticket column name
      description: column object and name mapping
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/TicketColumnNameResExample"
  /ticket/getTicket.json:
    post:
      tags:
        - ticket
      summary: get all ticket
      description: get all ticket
      requestBody:
        $ref: "#/components/requestBodies/GetTicketBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/GetTicketResExample"
  /ticket/openTicket.json:
    post:
      tags:
        - ticket
      summary: open ticket
      description: open ticket with workflow
      requestBody:
        $ref: "#/components/requestBodies/OpenTicketBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/OpenTicketResExample"
  /ticket/getCmFilters.json:
    post:
      tags:
        - ticket
      summary: get cm ip and port list
      description: get cm ip and port list for opening ticket
      requestBody:
        $ref: "#/components/requestBodies/GetCmFiltersBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/GetCmFiltersResExample"
  /ticket/getCmApplyData.json:
    post:
      tags:
        - ticket
      summary: get cm by ip and port
      description: get cm ip and port list for opening ticket
      requestBody:
        $ref: "#/components/requestBodies/GetCmApplyDataBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/GetCmApplyDataResExample"
  /ticket/getScanMergeParams.json:
    post:
      tags:
        - ticket
      summary: get scan parameters
      description: get scan parameters for substituting value
      requestBody:
        $ref: "#/components/requestBodies/GetScanMergeParamsBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/ScanMergeParamsExample"
  /ticket/saveScanSetting.json:
    post:
      tags:
        - ticket
      summary: schedule ticket
      description: schedule ticket for executing
      requestBody:
        $ref: "#/components/requestBodies/SaveScanSettingBody"
        example: "#/components/examples/ScanMergeParamsExample"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
  /group/getAllGroup.json:
    post:
      tags:
        - group
      summary: get all group
      description: get all group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                productType:
                  nullable: true
                  description: product type code
                  type: string
                  enum:
                    - PRODUCT_TYPE_RAPID7
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/GetAllGroupResExample"
  /rescan/settings.json:
    post:
      tags:
        - rescan
      summary: get scan settings
      description: get scan settings from scan tool via api
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/RescanSettingsExample"

components:
  schemas:
    GeneralResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            status:
              type: string
            datas:
              type: object
              properties:
                success:
                  type: boolean
                returnMsg:
                  type: string
                errMsg:
                  type: string
                errCode:
                  type: string
                datas:
                  type: array
    GeneralError:
      type: object
      properties:
        errMsg:
          type: string
          example: "123"
    OperatorBody:
      type: object
      properties:
        code:
          description: filter column name
          type: string
        value:
          description: filter value
          nullable: true
          type: string
        values:
          description: filter value if has multiple value
          nullable: true
          type: array
          items:
            type: string
        operator:
          description: operator symbol
          nullable: true
          type: string
          enum:
            - "="
            - ">="
            - "<="
            - "LIKE"
            - null
    GetTicketBody:
      type: object
      properties:
        orderBy:
          type: string
          description: ordey by column object name
        desc:
          type: boolean
          description: descended or not
        offset:
          type: integer
          description: current page count of pages
        recordOfEachPage:
          type: integer
          description: row count of each page
        filters:
          type: array
          description: column filter
          items:
            $ref: "#/components/schemas/OperatorBody"
        myTicket:
          type: boolean
          description: only get self tickets
        awaitDeal:
          type: boolean
          description: only get await deal tickets
        awaitCheck:
          type: boolean
          description: only get await check tickets
        enableHistory:
          type: boolean
          description: search history tickets or not
    OpenTicketBody:
      type: object
      properties:
        files:
          type: string
          format: binary
          nullable: true
          description: "file to upload"
        request:
          type: object
          description: "ticket parameters"
          properties:
            ticketCate:
              type: string
              enum:
                - TICKET_CATE_ASSET_ADD
                - TICKET_CATE_ASSET_CHANGE
                - TICKET_CATE_ASSET_DELETE
            ticketStatusNote:
              type: string
            product:
              type: string
              enum:
                - PRODUCT_TYPE_RAPID7
            ip:
              type: string
            newIp:
              type: string
            port:
              type: string
            newPort:
              type: string
            sync:
              type: string
            assetId:
              type: string
            assetEnv:
              type: string
            assetCate:
              type: string
            assetUsage:
              type: string
            networkCate:
              type: string
            softwareAddress:
              type: string
            description:
              type: string
            location:
              type: string
            hostname:
              type: string
            empId:
              type: string
            os:
              type: string
            baseGroup:
              type: string
            baseGroupU1:
              type: string
            baseGroupU2:
              type: string
            baseGroupU3:
              type: string
            baseGroupU4:
              type: string
            changeCause:
              type: string
            manageEmpId:
              type: string
            registerDate:
              type: string
            confirmDate:
              type: string
            assetValuationC:
              type: string
            assetValuationI:
              type: string
            assetValuationA:
              type: string
            assetAssessmentTl:
              type: string
            assetAssessmentFl:
              type: string
            assetAssessmentAl:
              type: string
            assetNote1:
              type: string
            assetNote2:
              type: string
            assetNote3:
              type: string
            assetNote4:
              type: string
            assetNote5:
              type: string
            assetReleaseDate:
              type: string
            assetReleaseDescription:
              type: string
            checkDescription:
              type: string
            workflowDescription:
              type: string
    GetCmFiltersBody:
      type: object
      properties:
        product:
          type: string
          enum:
            - PRODUCT_TYPE_RAPID7
          description: product code
        ip:
          type: string
          description: get port list by ip
        ips:
          type: array
          description: get port list by ip list
          items:
            type: string
          example: ["10.10.10.10", "10.211.55.1"]
        startWithIp:
          type: string
          description: get ip start with this value
    GetCmApplyDataBody:
      type: object
      properties:
        product:
          type: string
          enum:
            - PRODUCT_TYPE_RAPID7
          description: product code
        ips:
          type: array
          description: ip string list
          items:
            type: string
          example: ["10.10.10.10", "10.211.55.1"]
        ports:
          type: array
          description: port string list
          items:
            type: string
          example: ["1", "2"]
    SaveScanSettingBody:
      type: object
      properties:
        request:
          type: object
          description: "save scan parameters"
          properties:
            sids:
              type: array
              description: ticket sid list
            scheduleTime:
              type: string
              description: fromat is 'yyyy-MM-dd HH:mm:ss', null value for immediately action
              nullable: true
            policyId:
              type: string
            policyName:
              type: string
            engineId:
              type: string
            engineName:
              type: string
            scanName:
              type: string
  requestBodies:
    NullBody:
      required: false
      content:
        application/json:
          schema:
            nullable: true
    GetTicketBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetTicketBody"
    OpenTicketBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/OpenTicketBody"
    GetCmFiltersBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCmFiltersBody"
    GetCmApplyDataBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCmApplyDataBody"
    GetScanMergeParamsBody:
      required: false
      content:
        application/json:
          schema:
            nullable: true
            type: integer
            description: ticket sid
            example: 123
    SaveScanSettingBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/SaveScanSettingBody"
          example:
            $ref: "#/components/examples/SaveScanSettingBodyExample"

  examples:
    TicketColumnNameResExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: null
            errMsg: null
            errCode: null
            datas:
              [
                { "name": "確認日期", "value": "confirmDate" },
                { "name": "資產編號", "value": "assetId" },
                { "name": "上級單位4", "value": "baseGroupU4" },
                { "name": "資產備註2", "value": "assetNote2" },
                { "name": "上級單位3", "value": "baseGroupU3" },
                { "name": "資產備註3", "value": "assetNote3" },
              ]
    GetTicketResExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: null
            errMsg: null
            errCode: null
            datas:
              [
                {
                  "id": "AA202104010004",
                  "sync": "TRUE",
                  "assetId": null,
                  "assetEnv": null,
                  "assetCate": null,
                  "assetUsage": null,
                  "networkCate": null,
                  "ip": "6.6.6.6",
                  "softwareAddress": null,
                  "port": "13",
                  "description": null,
                  "location": null,
                  "hostname": null,
                  "empId": "000000(USER_000000)",
                  "os": null,
                  "baseGroup": "00E(資訊處)",
                  "baseGroupU1": null,
                  "baseGroupU2": null,
                  "baseGroupU3": null,
                  "baseGroupU4": null,
                  "changeCause": null,
                  "manageEmpId": null,
                  "registerDate": null,
                  "confirmDate": null,
                  "assetValuationC": "0",
                  "assetValuationI": "0",
                  "assetValuationA": "0",
                  "assetAssessmentTl": "2",
                  "assetAssessmentFl": "1",
                  "assetAssessmentAl": "1",
                  "assetNote1": null,
                  "assetNote2": null,
                  "assetNote3": null,
                  "assetNote4": null,
                  "assetNote5": null,
                  "createDate": "2021-04-01 13:05:21",
                  "createUser": "000000(USER_000000)",
                  "updateDate": "2021-04-01 13:05:21",
                  "updateUser": "000000(USER_000000)",
                  "empExt": "000",
                  "noticeEmail": null,
                  "assetValuation": "0",
                  "assetAssessment": "2",
                  "assetRisk": "0",
                  "sid": 38,
                  "ticketCate": "工單類別-資產新增",
                  "ticketStatus": "待審核",
                  "ticketStatusNote": null,
                  "product": "Rapid7",
                  "assetReleaseDate": "2020-09-25 00:00:00",
                  "assetReleaseDescription": "testttt",
                  "checkDescription": null,
                  "curWorkflowApplyId": 32,
                  "ticketCateCode": "TICKET_CATE_ASSET_ADD",
                  "productCode": "PRODUCT_TYPE_RAPID7",
                  "workflowDescription": "add desc.",
                  "scanId",
                  1,
                  "scheduleTime": "2021-05-19 17:16:48",
                  "scanName:": "scan for ticket",
                  "policyId": "123-123",
                  "policyName": "test policy name",
                },
              ]
    OpenTicketResExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: "審核申請成功"
            errMsg: null
            errCode: null
            datas: null
    GetCmFiltersResExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: null
            errMsg: null
            errCode: null
            datas:
              {
                "ips": null,
                "ports": ["1", "2", "3", "443", "5", "8080", "N/A"],
                "softwareAddresses": null,
              }
    GetCmApplyDataResExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: null
            errMsg: null
            errCode: null
            datas:
              {
                "existCm":
                  [
                    {
                      "id": "0206f2a4-495c-45cd-9ef9-c14141cc5ba5",
                      "sync": "TRUE",
                      "assetId": "",
                      "assetEnv": null,
                      "assetCate": null,
                      "assetUsage": null,
                      "networkCate": null,
                      "ip": "10.10.10.10",
                      "softwareAddress": "",
                      "port": "2",
                      "description": "",
                      "location": "",
                      "hostname": "",
                      "empId": "000004(USER_000004)",
                      "os": null,
                      "baseGroup": "00E40101(資訊組)",
                      "baseGroupU1": "00E40101M(資訊組主管)",
                      "baseGroupU2": "00E401(資訊科)",
                      "baseGroupU3": "00E4(資訊部)",
                      "baseGroupU4": "00E(資訊處)",
                      "changeCause": "",
                      "manageEmpId": "",
                      "registerDate": null,
                      "confirmDate": "2021-04-25 17:43:46",
                      "assetValuationC": "0",
                      "assetValuationI": "0",
                      "assetValuationA": "0",
                      "assetAssessmentTl": "1",
                      "assetAssessmentFl": "1",
                      "assetAssessmentAl": "1",
                      "assetNote1": "",
                      "assetNote2": "",
                      "assetNote3": "",
                      "assetNote4": "",
                      "assetNote5": "",
                      "createDate": "2021-04-25 17:32:04",
                      "createUser": "000000(USER_000000)",
                      "updateDate": "2021-04-25 17:43:46",
                      "updateUser": "000000(USER_000000)",
                      "empExt": "444",
                      "noticeEmail": null,
                      "assetValuation": "0",
                      "assetAssessment": "3",
                      "assetRisk": "0",
                      "logId": null,
                      "logTime": null,
                      "logType": null,
                      "logUser": null,
                    },
                    {
                      "id": "a6e396ef-aa61-40b9-b5fc-8f69669e36ca",
                      "sync": "TRUE",
                      "assetId": null,
                      "assetEnv": null,
                      "assetCate": null,
                      "assetUsage": null,
                      "networkCate": null,
                      "ip": "10.10.10.10",
                      "softwareAddress": null,
                      "port": "1",
                      "description": null,
                      "location": null,
                      "hostname": null,
                      "empId": "000003(USER_000003)",
                      "os": null,
                      "baseGroup": "00E40101(資訊組)",
                      "baseGroupU1": "00E40101M(資訊組主管)",
                      "baseGroupU2": "00E401(資訊科)",
                      "baseGroupU3": "00E4(資訊部)",
                      "baseGroupU4": "00E(資訊處)",
                      "changeCause": null,
                      "manageEmpId": null,
                      "registerDate": null,
                      "confirmDate": "2021-04-25 17:43:52",
                      "assetValuationC": "0",
                      "assetValuationI": "0",
                      "assetValuationA": "0",
                      "assetAssessmentTl": "2",
                      "assetAssessmentFl": "1",
                      "assetAssessmentAl": "1",
                      "assetNote1": null,
                      "assetNote2": null,
                      "assetNote3": null,
                      "assetNote4": null,
                      "assetNote5": null,
                      "createDate": "2021-04-25 17:34:06",
                      "createUser": "000000(USER_000000)",
                      "updateDate": "2021-04-25 17:43:52",
                      "updateUser": "000000(USER_000000)",
                      "empExt": "333",
                      "noticeEmail": null,
                      "assetValuation": "0",
                      "assetAssessment": "4",
                      "assetRisk": "0",
                      "logId": null,
                      "logTime": null,
                      "logType": null,
                      "logUser": null,
                    },
                  ],
                "nonExistCm":
                  [
                    { "ip": "10.211.55.2", "port": "1" },
                    { "ip": "10.211.55.2", "port": "2" },
                  ],
              }
    GetAllGroupResExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: null
            errMsg: null
            errCode: null
            datas:
              [
                {
                  "id": "c37a68b0-0ddb-4ce0-9c64-a8427da991ea",
                  "uid": "00A",
                  "name": "資安處",
                },
                {
                  "id": "b54eb42c-7750-401f-9549-3c2db623547a",
                  "uid": "00A4",
                  "name": "資安部",
                },
                {
                  "id": "b54eb42c-7750-401f-9549-3c2db62354aa",
                  "uid": "00A401",
                  "name": "資安科",
                },
              ]
    RescanSettingsExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: null
            errMsg: null
            errCode: null
            datas:
              {
                "apiMode": true,
                "policyDataList":
                  [
                    { "id": "cis", "name": "CIS" },
                    { "id": "disa", "name": "DISA" },
                    { "id": "dos-audit", "name": "Denial of service" },
                  ],
                "defaultPolicy": { "id": "cis", "name": "CIS" },
                "engines":
                  [
                    { "id": "1", "name": "Rapid7 Hosted Scan Engine" },
                    { "id": "3", "name": "Local scan engine" },
                  ],
                "defaultEngine": { "id": "3", "name": "Local scan engine" },
              }
    ScanMergeParamsExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: null
            errMsg: null
            errCode: null
            datas:
              {
                "policyId": "id1",
                "policyName": "name1",
                "engineId": "3",
                "engineName": "Local scan engine",
                "scanName": "test scan name",
                "scheduleTime": "2021-07-22 01:14:12",
                "mergeParams":
                  [
                    {
                      "name": "資產名稱",
                      "value": "<<MERGE_SCAN_PARAM_TICKET_HOSTNAME>>",
                    },
                    {
                      "name": "工單編號",
                      "value": "<<MERGE_SCAN_PARAM_TICKET_ID>>",
                    },
                    { "name": "IP", "value": "<<MERGE_SCAN_PARAM_TICKET_IP>>" },
                  ],
              }
    SaveScanSettingBodyExample:
      value:
        {
          "sids": [1, 2],
          "scheduleTime": "2021-06-15 12:00:00",
          "policyId": "p-id-1",
          "policyName": "p-name-1",
          "engineId": "e-id-1",
          "engineName": "e-name-1",
          "scanName": "<<MERGE_SCAN_PARAM_TICKET_HOSTNAME>>-<<MERGE_SCAN_PARAM_TICKET_IP>>",
        }

  responses:
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GeneralError"
