openapi: "3.0.2"
info:
  title: ics APIs
  version: "1.0"
  description: This is api sample for ics.
  contact:
    email: lixchengyu@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080/ics
    description: Development server
  - url: https://localhost:8080/ics
    description: Production server
tags:
  - name: ticket
    description: Everything about ticket API

paths:
  /ticket/column-name.json:
    post:
      tags:
        - ticket
      summary: get all ticket column name
      description: column object and name mapping
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/TicketColumnNameResExample"
  /ticket/getTicket.json:
    post:
      tags:
        - ticket
      summary: get all opened ticket
      description: get all opened ticket
      requestBody:
        $ref: "#/components/requestBodies/GetTicketBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/GetTicketResExample"
  /ticket/openTicket.json:
    post:
      tags:
        - ticket
      summary: open ticket
      description: open ticket with workflow
      requestBody:
        $ref: "#/components/requestBodies/OpenTicketBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralResponse"
              example:
                $ref: "#/components/examples/OpenTicketResExample"

components:
  schemas:
    GeneralResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            status:
              type: string
            datas:
              type: object
              properties:
                success:
                  type: boolean
                returnMsg:
                  type: string
                errMsg:
                  type: string
                errCode:
                  type: string
                datas:
                  type: array
    GeneralError:
      type: object
      properties:
        errMsg:
          type: string
          example: "123"
    OperatorRequest:
      type: object
      properties:
        code:
          description: filter column name
          type: string
        value:
          description: filter value
          nullable: true
          type: string
        values:
          description: filter value if has multiple value
          nullable: true
          type: array
          items:
            type: string
        operator:
          description: operator symbol
          nullable: true
          type: string
          enum:
            - "="
            - ">="
            - "<="
            - "LIKE"
            - null
    GetTicketRequest:
      type: object
      properties:
        orderBy:
          type: string
          description: ordey by column object name
        desc:
          type: boolean
          description: descended or not
        offset:
          type: integer
          description: current page count of pages
        recordOfEachPage:
          type: integer
          description: row count of each page
        filters:
          type: array
          description: column filter
          items:
            $ref: "#/components/schemas/OperatorRequest"
        myTicket:
          type: boolean
          description: only get self tickets
        awaitDeal:
          type: boolean
          description: only get await deal tickets
        awaitCheck:
          type: boolean
          description: only get await check tickets
        enableHistory:
          type: boolean
          description: search history tickets or not
    OpenTicketRequest:
      type: object
      properties:
        files:
          type: string
          format: binary
          nullable: true
          description: "file to upload"
        request:
          type: object
          description: "ticket parameters"
          properties:
            cmId:
              type: string
            ticketCate:
              type: string
              enum:
                - TICKET_CATE_ASSET_ADD
                - TICKET_CATE_ASSET_CHANGE
                - TICKET_CATE_ASSET_DELETE
            ticketStatusNote:
              type: string
            product:
              type: string
              enum:
                - PRODUCT_TYPE_RAPID7
            ip:
              type: string
            sync:
              type: string
            assetId:
              type: string
            assetEnv:
              type: string
            assetCate:
              type: string
            assetUsage:
              type: string
            networkCate:
              type: string
            softwareAddress:
              type: string
            port:
              type: string
            description:
              type: string
            location:
              type: string
            hostname:
              type: string
            empId:
              type: string
            os:
              type: string
            baseGroup:
              type: string
            baseGroupU1:
              type: string
            baseGroupU2:
              type: string
            baseGroupU3:
              type: string
            baseGroupU4:
              type: string
            changeCause:
              type: string
            manageEmpId:
              type: string
            registerDate:
              type: string
            confirmDate:
              type: string
            assetValuationC:
              type: string
            assetValuationI:
              type: string
            assetValuationA:
              type: string
            assetAssessmentTl:
              type: string
            assetAssessmentFl:
              type: string
            assetAssessmentAl:
              type: string
            assetNote1:
              type: string
            assetNote2:
              type: string
            assetNote3:
              type: string
            assetNote4:
              type: string
            assetNote5:
              type: string
            assetReleaseDate:
              type: string
            assetReleaseDescription:
              type: string
            checkDescription:
              type: string
            workflowDescription:
              type: string
  requestBodies:
    NullBody:
      required: false
      content:
        application/json:
          schema:
            nullable: true
    GetTicketBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetTicketRequest"
    OpenTicketBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/OpenTicketRequest"

  examples:
    TicketColumnNameResExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: null
            errMsg: null
            errCode: null
            datas:
              [
                { "name": "確認日期", "value": "confirmDate" },
                { "name": "資產編號", "value": "assetId" },
                { "name": "上級單位4", "value": "baseGroupU4" },
                { "name": "資產備註2", "value": "assetNote2" },
                { "name": "上級單位3", "value": "baseGroupU3" },
                { "name": "資產備註3", "value": "assetNote3" },
              ]
    GetTicketResExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: null
            errMsg: null
            errCode: null
            datas:
              [
                {
                  "id": "AA202104010004",
                  "sync": "TRUE",
                  "assetId": null,
                  "assetEnv": null,
                  "assetCate": null,
                  "assetUsage": null,
                  "networkCate": null,
                  "ip": "6.6.6.6",
                  "softwareAddress": null,
                  "port": "13",
                  "description": null,
                  "location": null,
                  "hostname": null,
                  "empId": "000000(USER_000000)",
                  "os": null,
                  "baseGroup": "00E(資訊處)",
                  "baseGroupU1": null,
                  "baseGroupU2": null,
                  "baseGroupU3": null,
                  "baseGroupU4": null,
                  "changeCause": null,
                  "manageEmpId": null,
                  "registerDate": null,
                  "confirmDate": null,
                  "assetValuationC": "0",
                  "assetValuationI": "0",
                  "assetValuationA": "0",
                  "assetAssessmentTl": "2",
                  "assetAssessmentFl": "1",
                  "assetAssessmentAl": "1",
                  "assetNote1": null,
                  "assetNote2": null,
                  "assetNote3": null,
                  "assetNote4": null,
                  "assetNote5": null,
                  "createDate": "2021-04-01 13:05:21",
                  "createUser": "000000(USER_000000)",
                  "updateDate": "2021-04-01 13:05:21",
                  "updateUser": "000000(USER_000000)",
                  "empExt": "000",
                  "noticeEmail": null,
                  "assetValuation": "0",
                  "assetAssessment": "2",
                  "assetRisk": "0",
                  "sid": 38,
                  "ticketCate": "工單類別-資產新增",
                  "ticketStatus": "待審核",
                  "ticketStatusNote": null,
                  "product": "Rapid7",
                  "assetReleaseDate": "2020-09-25 00:00:00",
                  "assetReleaseDescription": "testttt",
                  "checkDescription": null,
                  "curWorkflowApplyId": 32,
                  "ticketCateCode": "TICKET_CATE_ASSET_ADD",
                  "productCode": "PRODUCT_TYPE_RAPID7",
                  "workflowDescription": "add desc.",
                },
              ]
    OpenTicketResExample:
      value:
        result:
          status: "200"
          datas:
            success: true
            returnMsg: "審核申請成功"
            errMsg: null
            errCode: null
            datas: null
  responses:
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GeneralError"
